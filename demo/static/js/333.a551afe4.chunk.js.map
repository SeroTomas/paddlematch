{"version":3,"file":"static/js/333.a551afe4.chunk.js","mappings":"wPAEA,QADyB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,ygBAA6gB,KAAQ,aAAc,MAAS,Y,eCKxsBA,EAAqB,SAA4BC,EAAOC,GAC1D,OAAOC,EAAAA,cAAoBC,EAAAA,EAAUC,OAAOC,OAAO,CAAC,EAAGL,EAAO,CAC5DC,IAAKA,EACLK,KAAMC,IAEV,EAEAR,EAAmBS,YAAc,qBACjC,QAAeN,EAAAA,WAAiBH,G,gDCLzB,MAAMU,EAAc,CAAC,EAErB,SAASC,IAEZ,MAAM,KAAEC,EAAI,QAAEC,IAAYC,EAAAA,EAAAA,YAAWC,EAAAA,IAC9BC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1B,CAAEC,IAASC,EAAAA,EAAAA,GAAOC,EAAAA,GAAcR,GAEjCS,GAAUC,EAAAA,EAAAA,MAChBb,EAAYY,QAAUA,EACtB,MAAME,GAAWC,EAAAA,EAAAA,MA2DjB,OAzDAC,EAAAA,EAAAA,YAAU,KACDV,EAKLW,EAAAA,EAAaC,KAAK,CACdC,IAAK,OACLC,QAAS,iBACTC,SAAU,EACVC,UAAW,cACXzB,MAAM0B,EAAAA,EAAAA,KAACjC,EAAkB,IACzBkC,QAASA,IAAMjB,GAAQ,GACvBkB,aACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIL,EAAAA,EAAAA,KAAA,KAAAK,SAAG,wDACHF,EAAAA,EAAAA,MAACG,EAAAA,EAAK,CAACC,UAAU,WAAUF,SAAA,CACA,WAAtBd,EAASiB,UAEFR,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,KAAK,SAASC,QAASA,IAAMtB,EAAQuB,KAAK,KAAKP,SAAC,0BAIxDF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIL,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,KAAK,SAASC,QAASA,IAAMtB,EAAQuB,KAAK,UAAUP,SAAC,gBAG3C,KAAb,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAMkC,UACHb,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,KAAK,SAASC,QAASA,IAAMzB,EAAM,KAAM,CAC7C4B,KAAM,QACNC,KAAM,mBACNC,SAAU,SACXX,SAAC,gDAIU,KAAb,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAMkC,UACHb,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,KAAK,SAASC,QAASA,IAAMzB,EAAM,KAAM,CAC7C4B,KAAM,QACNC,KAAM,kBACNC,SAAU,SACXX,SAAC,6CAOpBL,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,KAAK,SAASI,KAAK,UAAUH,QAASA,IAAM3B,GAAQ,GAAOqB,SAAC,oBA9ChFX,EAAAA,EAAauB,MAAM,OAoDrB,GACH,CAAClC,EAAMM,EAASE,EAAUZ,EAAMO,IAE9BH,EAWE,MATCiB,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CACHS,MAAO,CAAEC,SAAU,QAASC,OAAQ,EAAGC,MAAO,GAC9CP,KAAK,UACLH,QAASA,IAAM3B,GAAQ,GAAMqB,SAChC,+BAMb,C","sources":["../node_modules/@ant-design/icons-svg/es/asn/ExperimentOutlined.js","../node_modules/@ant-design/icons/es/icons/ExperimentOutlined.js","demo/DemoControls.js"],"sourcesContent":["// This icon file is generated automatically.\nvar ExperimentOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 472a40 40 0 1080 0 40 40 0 10-80 0zm367 352.9L696.3 352V178H768v-68H256v68h71.7v174L145 824.9c-2.8 7.4-4.3 15.2-4.3 23.1 0 35.3 28.7 64 64 64h614.6c7.9 0 15.7-1.5 23.1-4.3 33-12.7 49.4-49.8 36.6-82.8zM395.7 364.7V180h232.6v184.7L719.2 600c-20.7-5.3-42.1-8-63.9-8-61.2 0-119.2 21.5-165.3 60a188.78 188.78 0 01-121.3 43.9c-32.7 0-64.1-8.3-91.8-23.7l118.8-307.5zM210.5 844l41.7-107.8c35.7 18.1 75.4 27.8 116.6 27.8 61.2 0 119.2-21.5 165.3-60 33.9-28.2 76.3-43.9 121.3-43.9 35 0 68.4 9.5 97.6 27.1L813.5 844h-603z\" } }] }, \"name\": \"experiment\", \"theme\": \"outlined\" };\nexport default ExperimentOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExperimentOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExperimentOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ExperimentOutlined = function ExperimentOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ExperimentOutlinedSvg\n  }));\n};\n\nExperimentOutlined.displayName = 'ExperimentOutlined';\nexport default React.forwardRef(ExperimentOutlined);","import { Button, Space, notification } from 'antd';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { ExperimentOutlined } from '@ant-design/icons';\r\nimport { authContext } from '../AuthContext';\r\nimport { postLoginApi } from '../api';\r\nimport { useApi } from '../useApi';\r\n\r\nexport const demoControl = {};\r\n\r\nexport function DemoControls() {\r\n\r\n    const { user, setUser } = useContext(authContext);\r\n    const [open, setOpen] = useState(true);\r\n    const [, login] = useApi(postLoginApi, setUser);\r\n\r\n    const history = useHistory();\r\n    demoControl.history = history;\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            notification.close('demo');\r\n            return;\r\n        }\r\n\r\n        notification.info({\r\n            key: 'demo',\r\n            message: 'Modo de prueba',\r\n            duration: 0,\r\n            placement: 'bottomRight',\r\n            icon: <ExperimentOutlined />,\r\n            onClose: () => setOpen(false),\r\n            description: (\r\n                <>\r\n                    <p>Esta es una demostración llena de datos falsos.</p>\r\n                    <Space direction=\"vertical\">\r\n                        {location.pathname === '/kiosk' ?\r\n                            (\r\n                                <Button size=\"middle\" onClick={() => history.push('/')}>\r\n                                    Salir de modo Kiosko\r\n                                </Button>\r\n                            ) : (\r\n                                <>\r\n                                    <Button size=\"middle\" onClick={() => history.push('/kiosk')}>\r\n                                        Modo Kiosko\r\n                                    </Button>\r\n                                    {user?.userId !== 2 &&\r\n                                        <Button size=\"middle\" onClick={() => login(null, {\r\n                                            type: 'plain',\r\n                                            mail: 'otto@example.com',\r\n                                            password: 'demo',\r\n                                        })}>\r\n                                            Inicie sesión como administrador (Otto).\r\n                                        </Button>\r\n                                    }\r\n                                    {user?.userId !== 9 &&\r\n                                        <Button size=\"middle\" onClick={() => login(null, {\r\n                                            type: 'plain',\r\n                                            mail: 'max@example.com',\r\n                                            password: 'demo',\r\n                                        })}>\r\n                                            Inicie sesión como usuario (Max).\r\n                                        </Button>\r\n                                    }\r\n                                </>\r\n                            )\r\n                        }\r\n                        <Button size=\"middle\" type=\"primary\" onClick={() => setOpen(false)}>\r\n                        Ocultar\r\n                        </Button>\r\n                    </Space>\r\n                </>\r\n            ),\r\n        });\r\n    }, [open, history, location, user, login]);\r\n\r\n    if (!open)\r\n        return (\r\n            <Button \r\n                style={{ position: 'fixed', bottom: 5, right: 5 }}\r\n                type=\"primary\" \r\n                onClick={() => setOpen(true)}\r\n            >\r\n                Mostrar controles de prueba\r\n            </Button>\r\n        );\r\n\r\n    return null;\r\n}"],"names":["ExperimentOutlined","props","ref","React","AntdIcon","Object","assign","icon","ExperimentOutlinedSvg","displayName","demoControl","DemoControls","user","setUser","useContext","authContext","open","setOpen","useState","login","useApi","postLoginApi","history","useHistory","location","useLocation","useEffect","notification","info","key","message","duration","placement","_jsx","onClose","description","_jsxs","_Fragment","children","Space","direction","pathname","Button","size","onClick","push","userId","type","mail","password","close","style","position","bottom","right"],"sourceRoot":""}