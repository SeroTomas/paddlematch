{"version":3,"file":"static/js/102.1c7ee2db.chunk.js","mappings":"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","sources":["admin/AnnouncementForm.js","webpack://reservierungssystem-tennis/./src/admin/CourtConfigForm.module.css?402e","admin/CourtConfigForm.js","admin/SystemConfigForm.js","webpack://reservierungssystem-tennis/./src/admin/GeneralSettingsPage.module.css?bb7f","admin/GeneralSettingsPage.js","admin/SubmitButtons.js"],"sourcesContent":["import { Checkbox, Form, Input } from 'antd';\r\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\r\n\r\nimport { SubmitButtons } from './SubmitButtons';\r\nimport { appContext } from '../AppContext';\r\nimport { patchConfigApi } from '../api';\r\nimport { useApi } from '../useApi';\r\n\r\nexport function AnnouncementForm() {\r\n\r\n    const { config: { announcement }, setConfig } = useContext(appContext);\r\n    const [enabled, setEnabled] = useState();\r\n    const [disableReset, setDisableReset] = useState(true);\r\n    const [state, patchConfig] = useApi(patchConfigApi, setConfig);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const resetForm = useCallback(announcement => {\r\n        form.resetFields()\r\n        setEnabled(!!announcement);\r\n        setDisableReset(true);\r\n    }, [form]);\r\n\r\n    useEffect(() => {\r\n        resetForm(announcement);\r\n    }, [resetForm, announcement]);\r\n\r\n    const handleEnabledChange = useCallback(e => {\r\n        setEnabled(e.target.checked);\r\n    }, []);\r\n\r\n    const handleFieldsChange = useCallback(() => {\r\n        if (disableReset)\r\n            setDisableReset(false);\r\n    }, [disableReset]);\r\n\r\n    const handleSave = useCallback(({ announcement }) => {\r\n        patchConfig(null, {\r\n            announcement: enabled ? announcement : '',\r\n        }, () => resetForm(enabled && announcement));\r\n    }, [enabled, patchConfig, resetForm]);\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            onFinish={handleSave}\r\n            onFieldsChange={handleFieldsChange}\r\n        >\r\n            <Form.Item\r\n                name=\"announcement\"\r\n                label={\r\n                    <Checkbox\r\n                        checked={enabled}\r\n                        onChange={handleEnabledChange}\r\n                    >\r\n                        Publicar anuncio\r\n                    </Checkbox>\r\n                }\r\n                initialValue={announcement}\r\n            >\r\n                <Input.TextArea\r\n                    disabled={!enabled}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <SubmitButtons\r\n                    apiState={state}\r\n                    disableReset={disableReset}\r\n                    onReset={resetForm}\r\n                />\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"court\":\"CourtConfigForm_court__t7koI\",\"courtIdInput\":\"CourtConfigForm_courtIdInput__FOBwJ\"};","import { Button, Form, Input, Modal, Space } from 'antd';\r\nimport { CaretDownOutlined, CaretUpOutlined, DeleteOutlined, ExclamationCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\n\r\nimport { SubmitButtons } from './SubmitButtons';\r\nimport { appContext } from '../AppContext';\r\nimport { putCourtsApi } from '../api';\r\nimport styles from './CourtConfigForm.module.css';\r\nimport { useApi } from '../useApi';\r\n\r\nexport function CourtConfigForm() {\r\n\r\n    const { courts, setCourts } = useContext(appContext);\r\n    const [disableReset, setDisableReset] = useState(true);\r\n    const [state, putCourts] = useApi(putCourtsApi, setCourts);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const initialValues = useMemo(() => ({ courts }), [courts]);\r\n\r\n    const resetForm = useCallback(() => {\r\n        form.resetFields();\r\n        setDisableReset(true);\r\n    }, [form]);\r\n\r\n    useEffect(() => {\r\n        form.resetFields();\r\n    }, [form, courts]);\r\n\r\n    const getNextId = useCallback(() => {\r\n        const curCourts = form.getFieldValue('courts') || [];\r\n        let maxId = 0;\r\n        for (let c of [...courts, ...curCourts])\r\n            maxId = Math.max(c.courtId, maxId);\r\n        return maxId + 1;\r\n    }, [courts, form]);\r\n\r\n    const handleFieldsChange = useCallback(() => {\r\n        if (disableReset)\r\n            setDisableReset(false);\r\n    }, [disableReset]);\r\n\r\n    const handleSave = useCallback(({ courts }) => {\r\n        Modal.confirm({\r\n            title: '¡Peligro!',\r\n            icon: <ExclamationCircleOutlined />,\r\n            centered: true,\r\n            content: (\r\n                <div>\r\n                    <p>El cambio de asiento puede provocar la pérdida de las reservas existentes.</p>\r\n                    <p>Todas las reservas que se produzcan durante un período de bloqueo se cancelarán automáticamente.</p>\r\n                    <p>Esto también se aplica a la eliminación de un lugar.</p>\r\n                    <p>Todos los usuarios afectados por una cancelación serán informados por correo electrónico.</p>\r\n                </div>\r\n            ),\r\n            okText: 'Confirmar',\r\n            okType: 'danger',\r\n            cancelText: 'Cancelar',\r\n            onOk() {\r\n                putCourts(null, courts, resetForm);\r\n            },\r\n        });\r\n    }, [putCourts, resetForm]);\r\n\r\n    return (\r\n        <Form\r\n            autoComplete=\"off\"\r\n            form={form}\r\n            initialValues={initialValues}\r\n            layout=\"vertical\"\r\n            onFieldsChange={handleFieldsChange}\r\n            onFinish={handleSave}\r\n        >\r\n            <Form.List name=\"courts\">\r\n                {(fields, { add, remove, move }) => (\r\n                    <>\r\n                        {fields.map((field, i) => (\r\n                            <div key={field.key} className={styles.court}>\r\n                                <Space>\r\n                                    <Form.Item\r\n                                        {...field}\r\n                                        key=\"courtId\"\r\n                                        label=\"ID\"\r\n                                        name={[field.name, 'courtId']}\r\n                                        // name={'courtId'}\r\n                                        fieldKey={[field.fieldKey, 'courtId']}\r\n                                    >\r\n                                        <Input\r\n                                            disabled\r\n                                            bordered={false}\r\n                                            className={styles.courtIdInput}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        {...field}\r\n                                        key=\"name\"\r\n                                        label=\"Name\"\r\n                                        name={[field.name, 'name']}\r\n                                        fieldKey={[field.fieldKey, 'name']}\r\n                                        rules={[{ required: true, message: 'Nombre requerido' }]}\r\n                                    >\r\n                                        <Input placeholder=\"Ejemplo: club aeronautico\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Desplazar\"\r\n                                    >\r\n                                        <Space>\r\n                                            <Button\r\n                                                onClick={() => move(i, i - 1)}\r\n                                                icon={<CaretUpOutlined />}\r\n                                            />\r\n                                            <Button\r\n                                                onClick={() => move(i, i + 1)}\r\n                                                icon={<CaretDownOutlined />}\r\n                                            />\r\n                                            <Button\r\n                                                onClick={() => remove(field.name)}\r\n                                                danger\r\n                                                icon={<DeleteOutlined />}\r\n                                            />\r\n                                        </Space>\r\n                                    </Form.Item>\r\n                                </Space>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <Form.Item key=\"add\">\r\n                            <Button\r\n                                type=\"dashed\"\r\n                                onClick={() => add({ courtId: getNextId() })}\r\n                                block\r\n                                icon={<PlusOutlined />}\r\n                            >\r\n                                Agregar lugar\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </>\r\n                )}\r\n            </Form.List>\r\n\r\n            <Form.Item>\r\n                <SubmitButtons\r\n                    apiState={state}\r\n                    disableReset={disableReset}\r\n                    onReset={resetForm}\r\n                />\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}","import { Form, Input, InputNumber, Slider } from 'antd';\r\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\r\n\r\nimport { SubmitButtons } from './SubmitButtons';\r\nimport { appContext } from '../AppContext';\r\nimport { isTimeZoneValid } from '../helper';\r\nimport { patchConfigApi } from '../api';\r\nimport { useApi } from '../useApi';\r\n\r\nconst TIMEZONE_LIST_LINK = 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones';\r\n\r\nconst sliderMarks = Array.from(Array(25)).reduce((marks, _, i) => {\r\n    marks[i] = i % 24; \r\n    return marks;\r\n}, {})\r\n\r\nexport function SystemConfigForm() {\r\n\r\n    const { config, setConfig } = useContext(appContext);\r\n    const [disableReset, setDisableReset] = useState(true);\r\n    const [state, patchConfig] = useApi(patchConfigApi, setConfig);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const resetForm = useCallback(() => {\r\n        form.resetFields();\r\n        setDisableReset(true);\r\n    }, [form]);\r\n\r\n    useEffect(() => {\r\n        resetForm();\r\n    }, [config, resetForm]);\r\n\r\n    const handleFieldsChange = useCallback(() => {\r\n        if (disableReset)\r\n            setDisableReset(false);\r\n    }, [disableReset]);\r\n\r\n    const handleSave = useCallback(values => {\r\n        patchConfig(null, values, resetForm);\r\n    }, [patchConfig, resetForm]);\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            initialValues={config}\r\n            onFinish={handleSave}\r\n            onFieldsChange={handleFieldsChange}\r\n        >\r\n            <Form.Item\r\n                name=\"url\"\r\n                label=\"URL del sistema de reservas\"\r\n                rules={[{ required: true, message: 'La URL es obligatoria' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"orgName\"\r\n                label=\"Nombre del club\"\r\n                rules={[{ required: true, message: 'Se requiere el nombre del club' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"timeZone\"\r\n                label={<span>Huso horario (<a href={TIMEZONE_LIST_LINK} target=\"_blank\" rel=\"noreferrer\">Nombres de usos horario</a>)</span>}\r\n                rules={[\r\n                    { required: true, message: 'Se requiere zona horaria' },\r\n                    { \r\n                        validator(_, value) {\r\n                            if (!isTimeZoneValid(value))\r\n                                return Promise.reject('Zona horaria no válida');\r\n                            return Promise.resolve();\r\n                        }\r\n                    }\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"serverMail\"\r\n                label=\"Dirección de correo electrónico utilizado\"\r\n                rules={[\r\n                    { type: 'email', message: 'Beispiel: mustermann@web.de' },\r\n                    { required: true, message: 'E-Mail es necesario' },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"reservationDaysInAdvance\"\r\n                label=\"Número de días que se pueden reservar con antelación\"\r\n                rules={[{ required: true, message: 'Se requiere información' }]}\r\n            >\r\n                <InputNumber \r\n                    min={1}\r\n                    max={1825}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"reservationMaxActiveCount\"\r\n                label=\"Número máximo de reservas abiertas que un usuario puede realizar\"\r\n                rules={[{ required: true, message: 'Se requiere información' }]}\r\n            >\r\n                <InputNumber \r\n                    min={1}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"visibleHours\"\r\n                label=\"Horarios mostrados en el calendario.\"\r\n                rules={[{ required: true, message: 'Se requiere información' }]}\r\n            >\r\n                <Slider \r\n                    marks={sliderMarks}\r\n                    range\r\n                    min={0}\r\n                    max={24}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <SubmitButtons\r\n                    apiState={state}\r\n                    disableReset={disableReset}\r\n                    onReset={resetForm}\r\n                />\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"GeneralSettingsPage_wrapper__qtyFA\"};","import { Divider, Typography } from 'antd';\r\n\r\nimport { AnnouncementForm } from './AnnouncementForm';\r\nimport { CourtConfigForm } from './CourtConfigForm';\r\nimport React from 'react';\r\nimport { SystemConfigForm } from './SystemConfigForm';\r\nimport styles from './GeneralSettingsPage.module.css';\r\n\r\nexport function GeneralSettingsPage() {\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n\r\n            <h1>Anuncio</h1>\r\n            <AnnouncementForm />\r\n\r\n            <Divider />\r\n\r\n            <h1>Gestión de lugares</h1>\r\n            <Typography.Text>\r\n                El orden determina la visualización en el calendario de reservas.\r\n            </Typography.Text>\r\n            <br /><br />\r\n            <CourtConfigForm />\r\n\r\n            <Divider />\r\n\r\n            <h1>Ajustes básicos</h1>\r\n            <SystemConfigForm />\r\n\r\n        </div>\r\n    );\r\n}","import { Button, Col, Row } from 'antd';\r\n\r\nimport { StatusText } from './StatusText';\r\n\r\nfunction SubmitButtonsState({ apiState }) {\r\n    const { success, loading, error } = apiState;\r\n\r\n    if (loading)\r\n        return (\r\n            <StatusText\r\n                loading\r\n                text=\"Guardar\"\r\n            />\r\n        );\r\n\r\n    if (error)\r\n        return (\r\n            <StatusText\r\n                error\r\n                text=\"No se pudo guardar\"\r\n            />\r\n        );\r\n\r\n    if (success)\r\n        return (\r\n            <StatusText\r\n                success\r\n                text=\"Guardado\"\r\n            />\r\n        );\r\n\r\n    return null;\r\n}\r\n\r\nexport function SubmitButtons({\r\n    apiState = {},\r\n    disableReset,\r\n    onSave,\r\n    onReset,\r\n}) {\r\n    return (\r\n        <Row gutter={[16, 16]} align=\"middle\">\r\n            <Col>\r\n                <Button \r\n                    disabled={apiState.loading}\r\n                    onClick={onSave}\r\n                    type=\"primary\" \r\n                    htmlType=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </Col>\r\n            <Col>\r\n                <Button \r\n                    disabled={apiState.loading || disableReset}\r\n                    onClick={onReset}\r\n                    htmlType=\"reset\"\r\n                >\r\n                    Restablecer los valores predeterminados\r\n                </Button>\r\n            </Col>\r\n            <Col>\r\n                <SubmitButtonsState apiState={apiState} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}"],"names":["AnnouncementForm","config","announcement","setConfig","useContext","appContext","enabled","setEnabled","useState","disableReset","setDisableReset","state","patchConfig","useApi","patchConfigApi","form","Form","useForm","resetForm","useCallback","resetFields","useEffect","handleEnabledChange","e","target","checked","handleFieldsChange","handleSave","_ref","_jsxs","layout","onFinish","onFieldsChange","children","_jsx","Item","name","label","Checkbox","onChange","initialValue","Input","TextArea","disabled","SubmitButtons","apiState","onReset","CourtConfigForm","courts","setCourts","putCourts","putCourtsApi","initialValues","useMemo","getNextId","curCourts","getFieldValue","maxId","c","Math","max","courtId","Modal","confirm","title","icon","ExclamationCircleOutlined","centered","content","okText","okType","cancelText","onOk","autoComplete","List","fields","_ref2","add","remove","move","_Fragment","map","field","i","className","styles","court","Space","_createElement","key","fieldKey","bordered","courtIdInput","rules","required","message","placeholder","Button","onClick","CaretUpOutlined","CaretDownOutlined","danger","DeleteOutlined","type","block","PlusOutlined","TIMEZONE_LIST_LINK","sliderMarks","Array","from","reduce","marks","_","SystemConfigForm","values","href","rel","validator","value","isTimeZoneValid","Promise","resolve","reject","InputNumber","min","Slider","range","GeneralSettingsPage","wrapper","Divider","Typography","Text","SubmitButtonsState","success","loading","error","StatusText","text","onSave","Row","gutter","align","Col","htmlType"],"sourceRoot":""}